Gu.Roslyn.CodeFixExtensions.AsyncDocumentEditorAction
Gu.Roslyn.CodeFixExtensions.AsyncDocumentEditorAction.Action.get -> System.Func<Microsoft.CodeAnalysis.Editing.DocumentEditor, System.Threading.CancellationToken, System.Threading.Tasks.Task>
Gu.Roslyn.CodeFixExtensions.AsyncDocumentEditorAction.AsyncDocumentEditorAction(string title, Microsoft.CodeAnalysis.Document document, System.Func<Microsoft.CodeAnalysis.Editing.DocumentEditor, System.Threading.CancellationToken, System.Threading.Tasks.Task> action, string equivalenceKey) -> void
Gu.Roslyn.CodeFixExtensions.BackingFieldsAdjacentWalker
Gu.Roslyn.CodeFixExtensions.BackingFieldsAdjacentWalker.BackingFieldsAdjacentWalker() -> void
Gu.Roslyn.CodeFixExtensions.CodeStyle
Gu.Roslyn.CodeFixExtensions.CodeStyleResult
Gu.Roslyn.CodeFixExtensions.CodeStyleResult.Mixed = 3 -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
Gu.Roslyn.CodeFixExtensions.CodeStyleResult.No = 2 -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
Gu.Roslyn.CodeFixExtensions.CodeStyleResult.NotFound = 0 -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
Gu.Roslyn.CodeFixExtensions.CodeStyleResult.Yes = 1 -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
Gu.Roslyn.CodeFixExtensions.CompilationStyleWalker<T>
Gu.Roslyn.CodeFixExtensions.CompilationStyleWalker<T>.CheckCore(Microsoft.CodeAnalysis.SyntaxTree containing, Microsoft.CodeAnalysis.Compilation compilation) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
Gu.Roslyn.CodeFixExtensions.CompilationStyleWalker<T>.CheckCoreAsync(Microsoft.CodeAnalysis.Document containing, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
Gu.Roslyn.CodeFixExtensions.CompilationStyleWalker<T>.CompilationStyleWalker() -> void
Gu.Roslyn.CodeFixExtensions.CompilationStyleWalker<T>.Update(Gu.Roslyn.CodeFixExtensions.CodeStyleResult newValue) -> void
Gu.Roslyn.CodeFixExtensions.CompilationUintSyntaxExtensions
Gu.Roslyn.CodeFixExtensions.DocumentEditorAction
Gu.Roslyn.CodeFixExtensions.DocumentEditorAction.Action.get -> System.Action<Microsoft.CodeAnalysis.Editing.DocumentEditor, System.Threading.CancellationToken>
Gu.Roslyn.CodeFixExtensions.DocumentEditorAction.DocumentEditorAction(string title, Microsoft.CodeAnalysis.Document document, System.Action<Microsoft.CodeAnalysis.Editing.DocumentEditor, System.Threading.CancellationToken> action, string equivalenceKey) -> void
Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext
Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.CancellationToken.get -> System.Threading.CancellationToken
Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.Diagnostics.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.Document.get -> Microsoft.CodeAnalysis.Document
Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.DocumentEditorCodeFixContext(Microsoft.CodeAnalysis.CodeFixes.CodeFixContext context) -> void
Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.Equals(Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext other) -> bool
Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.RegisterCodeFix(string title, System.Action<Microsoft.CodeAnalysis.Editing.DocumentEditor, System.Threading.CancellationToken> action, System.Type equivalenceKey, Microsoft.CodeAnalysis.Diagnostic diagnostic) -> void
Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.RegisterCodeFix(string title, System.Action<Microsoft.CodeAnalysis.Editing.DocumentEditor, System.Threading.CancellationToken> action, string equivalenceKey, Microsoft.CodeAnalysis.Diagnostic diagnostic) -> void
Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.RegisterCodeFix(string title, System.Func<Microsoft.CodeAnalysis.Editing.DocumentEditor, System.Threading.CancellationToken, System.Threading.Tasks.Task> action, string equivalenceKey, Microsoft.CodeAnalysis.Diagnostic diagnostic) -> void
Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.Span.get -> Microsoft.CodeAnalysis.Text.TextSpan
Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixProvider
Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixProvider.DocumentEditorCodeFixProvider() -> void
Gu.Roslyn.CodeFixExtensions.DocumentEditorExt
Gu.Roslyn.CodeFixExtensions.DocumentEditorFixAllProvider
Gu.Roslyn.CodeFixExtensions.DocumentationCommentTriviaSyntaxExtensions
Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions
Gu.Roslyn.CodeFixExtensions.Parse
Gu.Roslyn.CodeFixExtensions.QualifyEventAccessWalker
Gu.Roslyn.CodeFixExtensions.QualifyFieldAccessWalker
Gu.Roslyn.CodeFixExtensions.QualifyMethodAccessWalker
Gu.Roslyn.CodeFixExtensions.QualifyPropertyAccessWalker
Gu.Roslyn.CodeFixExtensions.SealRewriter
Gu.Roslyn.CodeFixExtensions.SealRewriter.SealRewriter() -> void
Gu.Roslyn.CodeFixExtensions.Simplify
Gu.Roslyn.CodeFixExtensions.SimplifyNamesRewriter
Gu.Roslyn.CodeFixExtensions.SortMembersRewriter
Gu.Roslyn.CodeFixExtensions.SortMembersRewriter.SortMembersRewriter() -> void
Gu.Roslyn.CodeFixExtensions.StringExt
Gu.Roslyn.CodeFixExtensions.SyntaxGeneratorExt
Gu.Roslyn.CodeFixExtensions.SyntaxListExt
Gu.Roslyn.CodeFixExtensions.SyntaxNodeExt
Gu.Roslyn.CodeFixExtensions.Trivia
Gu.Roslyn.CodeFixExtensions.UnderscoreFieldWalker
Gu.Roslyn.CodeFixExtensions.UsingDirectivesInsideNamespaceWalker
Gu.Roslyn.CodeFixExtensions.UsingDirectivesInsideNamespaceWalker.UsingDirectivesInsideNamespaceWalker() -> void
abstract Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixProvider.RegisterCodeFixesAsync(Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext context) -> System.Threading.Tasks.Task
override Gu.Roslyn.CodeFixExtensions.AsyncDocumentEditorAction.GetChangedDocumentAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Document>
override Gu.Roslyn.CodeFixExtensions.BackingFieldsAdjacentWalker.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.BackingFieldsAdjacentWalker.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.BackingFieldsAdjacentWalker.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.BackingFieldsAdjacentWalker.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.CompilationStyleWalker<T>.Clear() -> void
override Gu.Roslyn.CodeFixExtensions.DocumentEditorAction.GetChangedDocumentAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Document>
override Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.Equals(object obj) -> bool
override Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.GetHashCode() -> int
override Gu.Roslyn.CodeFixExtensions.DocumentEditorFixAllProvider.GetFixAsync(Microsoft.CodeAnalysis.CodeFixes.FixAllContext fixAllContext) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.CodeActions.CodeAction>
override Gu.Roslyn.CodeFixExtensions.DocumentEditorFixAllProvider.GetSupportedFixAllScopes() -> System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CodeFixes.FixAllScope>
override Gu.Roslyn.CodeFixExtensions.QualifyEventAccessWalker.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyEventAccessWalker.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyEventAccessWalker.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyEventAccessWalker.VisitIdentifierName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyEventAccessWalker.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyEventAccessWalker.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyEventAccessWalker.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyFieldAccessWalker.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyFieldAccessWalker.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyFieldAccessWalker.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyFieldAccessWalker.VisitIdentifierName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyFieldAccessWalker.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyFieldAccessWalker.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyFieldAccessWalker.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyMethodAccessWalker.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyMethodAccessWalker.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyMethodAccessWalker.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyMethodAccessWalker.VisitIdentifierName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyMethodAccessWalker.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyMethodAccessWalker.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyMethodAccessWalker.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyPropertyAccessWalker.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyPropertyAccessWalker.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyPropertyAccessWalker.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyPropertyAccessWalker.VisitIdentifierName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyPropertyAccessWalker.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyPropertyAccessWalker.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.QualifyPropertyAccessWalker.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.SealRewriter.VisitAccessorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SealRewriter.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SealRewriter.VisitEventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SealRewriter.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SealRewriter.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SealRewriter.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SimplifyNamesRewriter.VisitQualifiedCref(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SimplifyNamesRewriter.VisitQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SortMembersRewriter.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SortMembersRewriter.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SortMembersRewriter.VisitEnumDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SortMembersRewriter.VisitEventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SortMembersRewriter.VisitEventFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SortMembersRewriter.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SortMembersRewriter.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SortMembersRewriter.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.SortMembersRewriter.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax node) -> Microsoft.CodeAnalysis.SyntaxNode
override Gu.Roslyn.CodeFixExtensions.UnderscoreFieldWalker.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.UnderscoreFieldWalker.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.UnderscoreFieldWalker.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.UnderscoreFieldWalker.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.UsingDirectivesInsideNamespaceWalker.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.UsingDirectivesInsideNamespaceWalker.VisitEnumDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.UsingDirectivesInsideNamespaceWalker.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax node) -> void
override Gu.Roslyn.CodeFixExtensions.UsingDirectivesInsideNamespaceWalker.VisitUsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax node) -> void
override sealed Gu.Roslyn.CodeFixExtensions.AsyncDocumentEditorAction.EquivalenceKey.get -> string
override sealed Gu.Roslyn.CodeFixExtensions.AsyncDocumentEditorAction.Title.get -> string
override sealed Gu.Roslyn.CodeFixExtensions.DocumentEditorAction.EquivalenceKey.get -> string
override sealed Gu.Roslyn.CodeFixExtensions.DocumentEditorAction.Title.get -> string
override sealed Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixProvider.GetFixAllProvider() -> Microsoft.CodeAnalysis.CodeFixes.FixAllProvider
override sealed Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixProvider.RegisterCodeFixesAsync(Microsoft.CodeAnalysis.CodeFixes.CodeFixContext context) -> System.Threading.Tasks.Task
static Gu.Roslyn.CodeFixExtensions.BackingFieldsAdjacentWalker.Check(Microsoft.CodeAnalysis.SyntaxTree containing, Microsoft.CodeAnalysis.Compilation compilation, out bool newLineBetween) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.CodeStyle.BackingFieldsAdjacent(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, out bool newLineBetween) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.CodeStyle.BackingFieldsAdjacent(this Microsoft.CodeAnalysis.SemanticModel semanticModel, out bool newLineBetween) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.CodeStyle.FindInEditorConfigAsync<T>(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Options.PerLanguageOption<Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption<T>> key, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption<T>>
static Gu.Roslyn.CodeFixExtensions.CodeStyle.QualifyEventAccessAsync(this Microsoft.CodeAnalysis.Document document, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.CodeStyle.QualifyEventAccessAsync(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.CodeStyle.QualifyFieldAccessAsync(this Microsoft.CodeAnalysis.Document document, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.CodeStyle.QualifyFieldAccessAsync(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.CodeStyle.QualifyMethodAccessAsync(this Microsoft.CodeAnalysis.Document document, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.CodeStyle.QualifyMethodAccessAsync(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.CodeStyle.QualifyPropertyAccessAsync(this Microsoft.CodeAnalysis.Document document, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.CodeStyle.QualifyPropertyAccessAsync(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.CodeStyle.UnderscoreFields(Microsoft.CodeAnalysis.Editing.DocumentEditor editor) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.CodeStyle.UnderscoreFields(this Microsoft.CodeAnalysis.SemanticModel semanticModel) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.CodeStyle.UnderscoreFieldsAsync(this Microsoft.CodeAnalysis.Document document, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.CodeStyle.UsingDirectivesInsideNamespace(Microsoft.CodeAnalysis.Editing.DocumentEditor editor) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.CodeStyle.UsingDirectivesInsideNamespace(Microsoft.CodeAnalysis.SemanticModel semanticModel) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.CompilationUintSyntaxExtensions.AddUsing(this Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax compilationUnit, Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax usingDirective, Microsoft.CodeAnalysis.SemanticModel semanticModel) -> Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax
static Gu.Roslyn.CodeFixExtensions.CompilationUintSyntaxExtensions.AddUsing(this Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax compilationUnit, Microsoft.CodeAnalysis.ITypeSymbol type, Microsoft.CodeAnalysis.SemanticModel semanticModel) -> Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax
static Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.operator !=(Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext left, Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext right) -> bool
static Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext.operator ==(Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext left, Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixContext right) -> bool
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.AddBackingField(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax propertyDeclaration) -> Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.AddEvent(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax containingType, Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax event) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.AddEvent(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax containingType, Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax event) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.AddField(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax containingType, Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax field) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.AddMember(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax containingType, Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax member) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.AddMethod(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax containingType, Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax method) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.AddProperty(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax containingType, Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax property) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.AddUsing(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax usingDirective) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.AddUsing(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.ITypeSymbol type) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.CreateBackingField(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax propertyDeclaration) -> Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.FormatNode(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.SyntaxNode node) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.MoveAfter(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax toMove, Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax member) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.MoveAfter(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax toMove, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.MoveBefore(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax toMove, Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax member) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.MoveBefore(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax toMove, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.ReplaceNode<T>(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, T node, System.Func<T, Microsoft.CodeAnalysis.SyntaxNode> replacement) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.ReplaceToken(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.SyntaxToken oldToken, Microsoft.CodeAnalysis.SyntaxToken newToken) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.Seal(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax classDeclaration) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentEditorExt.SortMembers(this Microsoft.CodeAnalysis.Editing.DocumentEditor editor, Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax classDeclaration, System.Collections.Generic.IComparer<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> comparer = null) -> Microsoft.CodeAnalysis.Editing.DocumentEditor
static Gu.Roslyn.CodeFixExtensions.DocumentationCommentTriviaSyntaxExtensions.InsertAfter(this Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax comment, Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax node, Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax newElement) -> Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax
static Gu.Roslyn.CodeFixExtensions.DocumentationCommentTriviaSyntaxExtensions.InsertBefore(this Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax comment, Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax node, Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax newElement) -> Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax
static Gu.Roslyn.CodeFixExtensions.DocumentationCommentTriviaSyntaxExtensions.WithParam(this Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax comment, Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax param) -> Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax
static Gu.Roslyn.CodeFixExtensions.DocumentationCommentTriviaSyntaxExtensions.WithParamText(this Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax comment, string parameterName, string text) -> Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax
static Gu.Roslyn.CodeFixExtensions.DocumentationCommentTriviaSyntaxExtensions.WithReturns(this Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax comment, Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax returns) -> Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax
static Gu.Roslyn.CodeFixExtensions.DocumentationCommentTriviaSyntaxExtensions.WithReturnsText(this Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax comment, string text) -> Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax
static Gu.Roslyn.CodeFixExtensions.DocumentationCommentTriviaSyntaxExtensions.WithSummary(this Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax comment, Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax summary) -> Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax
static Gu.Roslyn.CodeFixExtensions.DocumentationCommentTriviaSyntaxExtensions.WithSummaryText(this Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax comment, string text) -> Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax
static Gu.Roslyn.CodeFixExtensions.DocumentationCommentTriviaSyntaxExtensions.WithTypeParam(this Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax comment, Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax typeparam) -> Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax
static Gu.Roslyn.CodeFixExtensions.DocumentationCommentTriviaSyntaxExtensions.WithTypeParamText(this Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax comment, string parameterName, string text) -> Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.AdjustLeadingNewLine<TMember>(this TMember member, TMember previous) -> TMember
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeList(this Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax member, Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax attributeList) -> Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax member, string text) -> Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax member, string text) -> Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax member, string text, bool adjustLeadingWhitespace = true) -> Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithAttributeListText(this Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax member, string text) -> Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithDocs<TMember>(this TMember member, Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax docs) -> TMember
static Gu.Roslyn.CodeFixExtensions.MemberDeclarationSyntaxExtensions.WithDocumentationText<TMember>(this TMember member, string text, bool adjustLeadingWhitespace = true) -> TMember
static Gu.Roslyn.CodeFixExtensions.Parse.AttributeList(string text, string leadingWhitespace = null) -> Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax
static Gu.Roslyn.CodeFixExtensions.Parse.ConstructorDeclaration(string code, string leadingWhitespace = null) -> Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.Parse.DocumentationCommentTriviaSyntax(string text, string leadingWhitespace = null) -> Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax
static Gu.Roslyn.CodeFixExtensions.Parse.EventDeclaration(string code, string leadingWhitespace = null) -> Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.Parse.EventFieldDeclaration(string code, string leadingWhitespace = null) -> Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.Parse.FieldDeclaration(string code, string leadingWhitespace = null) -> Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.Parse.LeadingTrivia(string text, string leadingWhitespace = null) -> Microsoft.CodeAnalysis.SyntaxTriviaList
static Gu.Roslyn.CodeFixExtensions.Parse.MethodDeclaration(string code, string leadingWhitespace = null) -> Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.Parse.PropertyDeclaration(string code, string leadingWhitespace = null) -> Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.Parse.XmlElementSyntax(string text, string leadingWhitespace = null) -> Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax
static Gu.Roslyn.CodeFixExtensions.QualifyEventAccessWalker.Check(Microsoft.CodeAnalysis.SyntaxTree containing, Microsoft.CodeAnalysis.Compilation compilation) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.QualifyEventAccessWalker.CheckAsync(Microsoft.CodeAnalysis.Document containing, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.QualifyFieldAccessWalker.Check(Microsoft.CodeAnalysis.SyntaxTree containing, Microsoft.CodeAnalysis.Compilation compilation) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.QualifyFieldAccessWalker.CheckAsync(Microsoft.CodeAnalysis.Document containing, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.QualifyMethodAccessWalker.Check(Microsoft.CodeAnalysis.SyntaxTree containing, Microsoft.CodeAnalysis.Compilation compilation) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.QualifyMethodAccessWalker.CheckAsync(Microsoft.CodeAnalysis.Document containing, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.QualifyPropertyAccessWalker.Check(Microsoft.CodeAnalysis.SyntaxTree containing, Microsoft.CodeAnalysis.Compilation compilation) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.QualifyPropertyAccessWalker.CheckAsync(Microsoft.CodeAnalysis.Document containing, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.SealRewriter.Seal(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax classDeclaration) -> Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.Simplify.WithSimplifiedNames<T>(this T node) -> T
static Gu.Roslyn.CodeFixExtensions.SimplifyNamesRewriter.Simplify<T>(T node) -> T
static Gu.Roslyn.CodeFixExtensions.SortMembersRewriter.Sort<T>(T typeDeclaration, System.Collections.Generic.IComparer<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> comparer) -> T
static Gu.Roslyn.CodeFixExtensions.StringExt.ToFirstCharLower(this string text) -> string
static Gu.Roslyn.CodeFixExtensions.StringExt.ToFirstCharUpper(this string text) -> string
static Gu.Roslyn.CodeFixExtensions.StringExt.WithLeadingWhiteSpace(this string text, string leadingWhitespace) -> string
static Gu.Roslyn.CodeFixExtensions.SyntaxGeneratorExt.AddSorted(this Microsoft.CodeAnalysis.Editing.SyntaxGenerator generator, Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax containingType, Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax member, System.Collections.Generic.IComparer<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> comparer = null) -> Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax
static Gu.Roslyn.CodeFixExtensions.SyntaxListExt.Move<T>(this Microsoft.CodeAnalysis.SyntaxList<T> list, int oldIndex, int newIndex) -> Microsoft.CodeAnalysis.SyntaxList<T>
static Gu.Roslyn.CodeFixExtensions.SyntaxNodeExt.TryFindNode<T>(this Microsoft.CodeAnalysis.SyntaxNode syntaxRoot, Microsoft.CodeAnalysis.Diagnostic diagnostic, out T node) -> bool
static Gu.Roslyn.CodeFixExtensions.SyntaxNodeExt.TryFindNode<T>(this Microsoft.CodeAnalysis.SyntaxNode syntaxRoot, Microsoft.CodeAnalysis.Location location, out T node) -> bool
static Gu.Roslyn.CodeFixExtensions.SyntaxNodeExt.TryFindNodeOrAncestor<T>(this Microsoft.CodeAnalysis.SyntaxNode syntaxRoot, Microsoft.CodeAnalysis.Diagnostic diagnostic, out T node) -> bool
static Gu.Roslyn.CodeFixExtensions.SyntaxNodeExt.TryFindNodeOrAncestor<T>(this Microsoft.CodeAnalysis.SyntaxNode syntaxRoot, Microsoft.CodeAnalysis.Location location, out T node) -> bool
static Gu.Roslyn.CodeFixExtensions.Trivia.AppendLeadingTrivia<T>(this T node, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.AppendLeadingTrivia<T>(this T node, params Microsoft.CodeAnalysis.SyntaxTrivia[] trivia) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.AppendTrailingTrivia<T>(this T node, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.AppendTrailingTrivia<T>(this T node, params Microsoft.CodeAnalysis.SyntaxTrivia[] trivia) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.LeadingWhitespace(this Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax accessor) -> string
static Gu.Roslyn.CodeFixExtensions.Trivia.LeadingWhitespace(this Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax member) -> string
static Gu.Roslyn.CodeFixExtensions.Trivia.PrependLeadingTrivia<T>(this T node, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.PrependLeadingTrivia<T>(this T node, params Microsoft.CodeAnalysis.SyntaxTrivia[] trivia) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.PrependTrailingTrivia<T>(this T node, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.PrependTrailingTrivia<T>(this T node, params Microsoft.CodeAnalysis.SyntaxTrivia[] trivia) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.TryGetLeadingNewLine(this Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax member, out Microsoft.CodeAnalysis.SyntaxTrivia trivia) -> bool
static Gu.Roslyn.CodeFixExtensions.Trivia.TryGetLeadingTrivia(this Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax member, out Microsoft.CodeAnalysis.SyntaxTriviaList trivia) -> bool
static Gu.Roslyn.CodeFixExtensions.Trivia.TryGetTrailingNewLine(this Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax member, out Microsoft.CodeAnalysis.SyntaxTrivia trivia) -> bool
static Gu.Roslyn.CodeFixExtensions.Trivia.TryGetTrailingTrivia(this Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax member, out Microsoft.CodeAnalysis.SyntaxTriviaList trivia) -> bool
static Gu.Roslyn.CodeFixExtensions.Trivia.WithLeadingElasticLineFeed<T>(this T node) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.WithLeadingElasticSpace<T>(this T node) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.WithLeadingLineFeed<T>(this T node) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.WithLeadingTriviaFrom<T>(this T target, Microsoft.CodeAnalysis.SyntaxNode source) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.WithTrailingElasticLineFeed<T>(this T node) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.WithTrailingLineFeed<T>(this T node) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.WithTrailingTriviaFrom<T>(this T target, Microsoft.CodeAnalysis.SyntaxNode source) -> T
static Gu.Roslyn.CodeFixExtensions.Trivia.WithoutLeadingLineFeed<T>(this T node) -> T
static Gu.Roslyn.CodeFixExtensions.UnderscoreFieldWalker.Check(Microsoft.CodeAnalysis.SyntaxTree containing, Microsoft.CodeAnalysis.Compilation compilation) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.UnderscoreFieldWalker.CheckAsync(Microsoft.CodeAnalysis.Document containing, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static Gu.Roslyn.CodeFixExtensions.UsingDirectivesInsideNamespaceWalker.Check(Microsoft.CodeAnalysis.SyntaxTree containing, Microsoft.CodeAnalysis.Compilation compilation) -> Gu.Roslyn.CodeFixExtensions.CodeStyleResult
static Gu.Roslyn.CodeFixExtensions.UsingDirectivesInsideNamespaceWalker.CheckAsync(Microsoft.CodeAnalysis.Document containing, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Gu.Roslyn.CodeFixExtensions.CodeStyleResult>
static readonly Gu.Roslyn.CodeFixExtensions.DocumentEditorFixAllProvider.Document -> Gu.Roslyn.CodeFixExtensions.DocumentEditorFixAllProvider
static readonly Gu.Roslyn.CodeFixExtensions.DocumentEditorFixAllProvider.Project -> Gu.Roslyn.CodeFixExtensions.DocumentEditorFixAllProvider
static readonly Gu.Roslyn.CodeFixExtensions.DocumentEditorFixAllProvider.Solution -> Gu.Roslyn.CodeFixExtensions.DocumentEditorFixAllProvider
static readonly Gu.Roslyn.CodeFixExtensions.SimplifyNamesRewriter.Default -> Gu.Roslyn.CodeFixExtensions.SimplifyNamesRewriter
virtual Gu.Roslyn.CodeFixExtensions.DocumentEditorCodeFixProvider.FixAllProvider() -> Gu.Roslyn.CodeFixExtensions.DocumentEditorFixAllProvider